(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{414:function(t,e,n){t.exports=n.p+"assets/img/flow.dab5043b.png"},415:function(t,e,n){t.exports=n.p+"assets/img/action-1.35a80f2f.png"},416:function(t,e,n){t.exports=n.p+"assets/img/action-2.a012e14b.png"},417:function(t,e,n){t.exports=n.p+"assets/img/action-3.d344aee6.png"},460:function(t,e,n){"use strict";n.r(e);var s=n(62),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"给vuepress增加自动构建并发布到github-io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#给vuepress增加自动构建并发布到github-io"}},[t._v("#")]),t._v(" 给VuePress增加自动构建并发布到github.io")]),t._v(" "),s("h2",{attrs:{id:"_1-思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-思路"}},[t._v("#")]),t._v(" 1. 思路")]),t._v(" "),s("p",[t._v("github为代码库提供了 "),s("a",{attrs:{href:"https://docs.github.com/cn/actions/learn-github-actions/understanding-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("action功能（点击查看更多）"),s("OutboundLink")],1),t._v(" ，在push完以后，触发一个任务脚本，可以实现持续集成的功能。")]),t._v(" "),s("h2",{attrs:{id:"_2-流程描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-流程描述"}},[t._v("#")]),t._v(" 2. 流程描述")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("创建两个仓库")])]),t._v(" "),s("p",[t._v("我们编写的VuePress工程属于源码，发布到github.io里的是构建之后的内容。这个源码我不想公开，我们需要在github上创建两个代码库，一个是kyletang.github.io，公开访问权限，另一个是KyleTangPages私有仓库。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("申请github access token")])]),t._v(" "),s("p",[t._v("将代码提交到KyleTangPages，触发KyleTangPages的action任务，执行自动构建并push到kyletang.github.io，因为这里要push到kyletang.github.io，这个操作是需要权限的，需要先申请一个 "),s("a",{attrs:{href:"https://docs.github.com/cn/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("github access token（点击查看更多）"),s("OutboundLink")],1),t._v(" ，再通过命令行或脚本push代码时，就可以使用access token来完成身份验证。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("为github仓库配置环境密钥")])]),t._v(" "),s("p",[t._v("很显然，这个access token如果配置在action的自动任务脚本里是不合适的，因为谁有了这个，就可以访问我们github上的所有仓库了（具体都有什么权限，申请的时候可以分配）。\ngithub允许我们将access token的值保存在KyleTangPages仓库里的 "),s("a",{attrs:{href:"https://docs.github.com/cn/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"}},[t._v("环境密钥（点击查看更多）"),s("OutboundLink")],1),t._v(" 中，脚本在执行的时候，就可以从环境变量中获取access token。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("给私有库增加actions脚本")])]),t._v(" "),s("p",[t._v("详见下文")])])]),t._v(" "),s("p",[s("strong",[t._v("流程示意图")])]),t._v(" "),s("p",[s("img",{attrs:{src:n(414),alt:"示意图"}})]),t._v(" "),s("h2",{attrs:{id:"_3-实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实战"}},[t._v("#")]),t._v(" 3. 实战")]),t._v(" "),s("p",[t._v("了解了整体的流程，我们还需要一个把vuepress进行自动构建的脚本，"),s("a",{attrs:{href:"https://vuepress.vuejs.org/zh/guide/deploy.html#github-pages-and-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("vuepress官方提供的教程: 部署GitHub Pages and Github Actions"),s("OutboundLink")],1),t._v(" 里提供了例子。")]),t._v(" "),s("ol",[s("li",[t._v("在个人中心里创建 "),s("a",{attrs:{href:"https://docs.github.com/cn/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("github access token（点击查看帮助）"),s("OutboundLink")],1),t._v(" ;")]),t._v(" "),s("li",[t._v("在KyleTangPages仓库下，创建一个 secrets "),s("a",{attrs:{href:"https://docs.github.com/cn/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"}},[t._v("环境密钥（点击查看帮助）"),s("OutboundLink")],1),t._v("，填入刚创建的，名字为 "),s("strong",[t._v("ACCESS_TOKEN")]),t._v(" ,值为刚才创建的那个 token")]),t._v(" "),s("li",[t._v("在KyleTangPages项目的根目录下的 "),s("strong",[t._v(".github/workflows")]),t._v(" 目录（没有的话，请手动创建一个）下创建一个 .yml 或者 .yaml 文件，如:vuepress-deploy.yml; 内容如下：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("name: Build and Deploy:MASTER\non: [push]\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v3\n\n    - name: Build and Deploy\n      uses: jenkey2011/vuepress-deploy@master\n      env:\n        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\n        TARGET_REPO: KyleTang/kyletang.github.io\n        TARGET_BRANCH: master\n        BUILD_SCRIPT: yarn && yarn docs:build\n        BUILD_DIR: docs/.vuepress/dist/\n        COMMIT_MESSAGE: Auto deploy from Github Actions\n")])])]),s("p",[s("strong",[t._v("这里说明一下")])]),t._v(" "),s("p",[s("strong",[t._v("on")]),t._v(" 的意思，是在push的时候触发")]),t._v(" "),s("p",[s("strong",[t._v("jobs")]),t._v(" 里有一个任务名为"),s("strong",[t._v("build-and-deploy")])]),t._v(" "),s("p",[s("strong",[t._v("runs-on")]),t._v(" 这个任务运行在 ubuntu-latest 的环境，ubuntu-latest表示最新版的ubuntu系统（docker镜像）。")]),t._v(" "),s("p",[t._v("这个任务分两步(step)执行, 每一步有一个action组件，uses表示使用的action组件的github库路径（用户名/仓库@分支）")]),t._v(" "),s("p",[s("strong",[t._v("env")]),t._v("是在这行这个步骤的时候环境变量。")]),t._v(" "),s("p",[s("strong",[t._v("TARGET_REPO")]),t._v("是 "),s("a",{attrs:{href:"https://github.com/jenkey2011/vuepress-deploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/jenkey2011/vuepress-deploy"),s("OutboundLink")],1),t._v(" 项目里"),s("strong",[t._v("entrypoint.sh")]),t._v("里用到的环境变量，表示要发布到的github.io库的名字。")]),t._v(" "),s("p",[s("strong",[t._v("BUILD_SCRIPT")]),t._v("是构建脚本，自己本地怎么构建，这里就怎么写。")]),t._v(" "),s("h2",{attrs:{id:"_4-查看构建情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看构建情况"}},[t._v("#")]),t._v(" 4. 查看构建情况")]),t._v(" "),s("p",[s("strong",[t._v("在actions里查看")]),t._v(" "),s("img",{attrs:{src:n(415),alt:"1"}})]),t._v(" "),s("p",[s("strong",[t._v("点击一个workflow，查看详情")]),t._v(" "),s("img",{attrs:{src:n(416),alt:"2"}})]),t._v(" "),s("p",[s("strong",[t._v("点击左边的jobs，可以查看任务的执行过程")]),t._v(" "),s("img",{attrs:{src:n(417),alt:"3"}})]),t._v(" "),s("h2",{attrs:{id:"_5-写在后边的话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-写在后边的话"}},[t._v("#")]),t._v(" 5. 写在后边的话")]),t._v(" "),s("h3",{attrs:{id:"_5-1-github-io里只能看到最后一次的提交记录-历史的都被覆盖的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-github-io里只能看到最后一次的提交记录-历史的都被覆盖的问题"}},[t._v("#")]),t._v(" 5.1 github.io里只能看到最后一次的提交记录，历史的都被覆盖的问题")]),t._v(" "),s("p",[t._v("jenkey2011/vuepress-deploy的entrypoint.sh脚本里，会通过git push -f 强制覆盖的方式push，所以，*.github.io 里只会有最新的那次提交，看不到过往的提交记录，这也没什么，因为vuepress每次都是全部构建，看这个历史提交意义不大。")]),t._v(" "),s("p",[t._v("如果你也和我一样有点强迫症（毕竟有问题还能方便回退），可以使用我改改过的，在上面 uses的区域，把jenkey2011/vuepress-deploy改成KyleTang/vuepress-deploy就可以了。")]),t._v(" "),s("h3",{attrs:{id:"_5-2-在windows上手工执行的增量提交批处理文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-在windows上手工执行的增量提交批处理文件"}},[t._v("#")]),t._v(" 5.2 在windows上手工执行的增量提交批处理文件")]),t._v(" "),s("p",[t._v("脚本 deployGithubPage.cmd")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('rem 部署到github pages, WS是workspace的意思\n\nset WS_BLOG=D:\\gitrepo\\KyleTangPages\n\nset WS_PAGES=D:\\gitrepo\\kyletang.github.io\n\nrem 拉取github pages到本地\ncd /d %WS_PAGES%\ngit.exe pull --progress -v --no-rebase "origin"\n\nif %errorlevel% neq 0 pause exit\n\nrem 复制编译好的文件到pages目录\nxcopy %WS_BLOG%\\docs\\.vuepress\\dist %WS_PAGES% /Y /S /E\n\nrem 本地提交\ngit add .\ngit commit -m "auto deploy on windows"\n\nif %errorlevel% neq 0 pause exit\n\nrem 推送到kyletang.github.io\ngit.exe push --progress "origin" master:master\n\nif %errorlevel% neq 0 pause exit\n\ncd ..\npause\n\n')])])]),s("h3",{attrs:{id:"_5-3-github的actions有免费的额度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-github的actions有免费的额度"}},[t._v("#")]),t._v(" 5.3 github的actions有免费的额度")]),t._v(" "),s("p",[t._v("如果使用超了，需要付费，见这里："),s("a",{attrs:{href:"https://docs.github.com/cn/billing/managing-billing-for-github-actions/about-billing-for-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 GitHub Actions 的计费"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_6-参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考资料"}},[t._v("#")]),t._v(" 6. 参考资料")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://github.com/jenkey2011/vuepress-deploy/blob/master/README.zh-CN.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于vuepress-deploy的更详细的说明"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰: GitHub Actions 入门教程"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://docs.github.com/cn/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("github access token"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://docs.github.com/cn/actions/security-guides/encrypted-secrets",target:"_blank",rel:"noopener noreferrer"}},[t._v("github的加密机制"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://docs.github.com/cn/actions/learn-github-actions/understanding-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("github actions功能介绍"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://docs.github.com/cn/actions/learn-github-actions/essential-features-of-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("github action的脚本编写说明"),s("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=r.exports}}]);